// src/payload/collections/BuilderTranslations.ts
import type { CollectionConfig } from 'payload';
import { withDefaultHooks } from '../../utils/withDefaultHooks';

export const BuilderTranslations: CollectionConfig = withDefaultHooks({
  slug: 'builder-translations',
  admin: {
    useAsTitle: 'key',
    group: 'Visual Builder',
    description: 'Multi-language content support - connects to all builder collections for i18n',
    defaultColumns: ['key', 'language', 'value', 'isTranslated', 'lastModifiedAt'],
    listSearchableFields: ['key', 'value', 'context'],
  },
  access: {
    read: ({ req }: any) => {
      if (!req.user) return false;
      if ((req.user as any)?.role === 'admin') return true;
      if ((req.user as any)?.role === 'manager') return true;
      return { createdBy: { equals: req.user.id } };
    },
    create: ({ req }: any) => {
      if (!req.user) return false;
      return ['admin', 'manager', 'editor'].includes((req.user as any)?.role);
    },
    update: ({ req }: any) => {
      if (!req.user) return false;
      if ((req.user as any)?.role === 'admin') return true;
      if ((req.user as any)?.role === 'manager') return true;
      return { createdBy: { equals: req.user.id } };
    },
    delete: ({ req }: any) => {
      if (!req.user) return false;
      return (req.user as any)?.role === 'admin';
    },
  },
  fields: [
    {
      name: 'key',
      type: 'text',
      required: true,
      admin: {
        description: 'Translation key (unique identifier)',
      },
    },
    {
      name: 'language',
      type: 'select',
      options: [
        { label: 'English (en)', value: 'en' },
        { label: 'Spanish (es)', value: 'es' },
        { label: 'French (fr)', value: 'fr' },
        { label: 'German (de)', value: 'de' },
        { label: 'Italian (it)', value: 'it' },
        { label: 'Portuguese (pt)', value: 'pt' },
        { label: 'Russian (ru)', value: 'ru' },
        { label: 'Chinese (zh)', value: 'zh' },
        { label: 'Japanese (ja)', value: 'ja' },
        { label: 'Korean (ko)', value: 'ko' },
        { label: 'Arabic (ar)', value: 'ar' },
        { label: 'Hindi (hi)', value: 'hi' },
        { label: 'Dutch (nl)', value: 'nl' },
        { label: 'Swedish (sv)', value: 'sv' },
        { label: 'Danish (da)', value: 'da' },
        { label: 'Norwegian (no)', value: 'no' },
        { label: 'Finnish (fi)', value: 'fi' },
        { label: 'Polish (pl)', value: 'pl' },
        { label: 'Czech (cs)', value: 'cs' },
        { label: 'Turkish (tr)', value: 'tr' },
        { label: 'Hebrew (he)', value: 'he' },
        { label: 'Thai (th)', value: 'th' },
        { label: 'Vietnamese (vi)', value: 'vi' },
        { label: 'Indonesian (id)', value: 'id' },
        { label: 'Malay (ms)', value: 'ms' },
        { label: 'Filipino (fil)', value: 'fil' },
      ],
      required: true,
      admin: {
        description: 'Language code for this translation',
      },
    },
    {
      name: 'value',
      type: 'textarea',
      required: true,
      admin: {
        description: 'Translated text',
        rows: 3,
      },
    },
    {
      name: 'context',
      type: 'text',
      admin: {
        description: 'Context where this translation is used (e.g., "navigation.home", "button.save")',
      },
    },
    {
      name: 'itemType',
      type: 'select',
      options: [
        { label: 'Page', value: 'page' },
        { label: 'Section', value: 'section' },
        { label: 'Block', value: 'block' },
        { label: 'Template', value: 'template' },
        { label: 'Theme', value: 'theme' },
        { label: 'Global', value: 'global' },
        { label: 'Component', value: 'component' },
      ],
      admin: {
        description: 'Type of item this translation belongs to',
      },
    },
    {
      name: 'itemId',
      type: 'text',
      admin: {
        description: 'ID of the item this translation belongs to',
      },
    },
    {
      name: 'fieldName',
      type: 'text',
      admin: {
        description: 'Specific field name within the item',
      },
    },
    {
      name: 'isTranslated',
      type: 'checkbox',
      defaultValue: false,
      admin: {
        description: 'Whether this translation has been completed',
      },
    },
    {
      name: 'isMachineTranslated',
      type: 'checkbox',
      defaultValue: false,
      admin: {
        description: 'Whether this translation was generated by machine translation',
      },
    },
    {
      name: 'translationQuality',
      type: 'select',
      options: [
        { label: 'Excellent', value: 'excellent' },
        { label: 'Good', value: 'good' },
        { label: 'Fair', value: 'fair' },
        { label: 'Poor', value: 'poor' },
        { label: 'Needs Review', value: 'needs_review' },
      ],
      admin: {
        description: 'Quality rating of the translation',
      },
    },
    {
      name: 'lastModifiedAt',
      type: 'date',
      admin: {
        description: 'Last time this translation was modified',
        readOnly: true,
      },
    },
    {
      name: 'lastModifiedBy',
      type: 'relationship',
      relationTo: 'users' as any as any,
      admin: {
        description: 'User who last modified this translation',
        readOnly: true,
      },
    },
    {
      name: 'originalText',
      type: 'textarea',
      admin: {
        description: 'Original text in the source language',
        rows: 3,
      },
    },
    {
      name: 'sourceLanguage',
      type: 'select',
      options: [
        { label: 'English (en)', value: 'en' },
        { label: 'Spanish (es)', value: 'es' },
        { label: 'French (fr)', value: 'fr' },
        { label: 'German (de)', value: 'de' },
        { label: 'Italian (it)', value: 'it' },
        { label: 'Portuguese (pt)', value: 'pt' },
        { label: 'Russian (ru)', value: 'ru' },
        { label: 'Chinese (zh)', value: 'zh' },
        { label: 'Japanese (ja)', value: 'ja' },
        { label: 'Korean (ko)', value: 'ko' },
        { label: 'Arabic (ar)', value: 'ar' },
        { label: 'Hindi (hi)', value: 'hi' },
        { label: 'Dutch (nl)', value: 'nl' },
        { label: 'Swedish (sv)', value: 'sv' },
        { label: 'Danish (da)', value: 'da' },
        { label: 'Norwegian (no)', value: 'no' },
        { label: 'Finnish (fi)', value: 'fi' },
        { label: 'Polish (pl)', value: 'pl' },
        { label: 'Czech (cs)', value: 'cs' },
        { label: 'Turkish (tr)', value: 'tr' },
        { label: 'Hebrew (he)', value: 'he' },
        { label: 'Thai (th)', value: 'th' },
        { label: 'Vietnamese (vi)', value: 'vi' },
        { label: 'Indonesian (id)', value: 'id' },
        { label: 'Malay (ms)', value: 'ms' },
        { label: 'Filipino (fil)', value: 'fil' },
      ],
      admin: {
        description: 'Source language of the original text',
      },
    },
    {
      name: 'characterCount',
      type: 'number',
      admin: {
        description: 'Character count of the translation',
        readOnly: true,
      },
    },
    {
      name: 'wordCount',
      type: 'number',
      admin: {
        description: 'Word count of the translation',
        readOnly: true,
      },
    },
    {
      name: 'pluralForms',
      type: 'array',
      admin: {
        description: 'Plural forms for languages that have them',
      },
      fields: [
        {
          name: 'count',
          type: 'select',
          options: [
            { label: 'Zero', value: 'zero' },
            { label: 'One', value: 'one' },
            { label: 'Two', value: 'two' },
            { label: 'Few', value: 'few' },
            { label: 'Many', value: 'many' },
            { label: 'Other', value: 'other' },
          ],
          required: true,
          admin: {
            description: 'Plural form type',
          },
        },
        {
          name: 'value',
          type: 'text',
          required: true,
          admin: {
            description: 'Translation for this plural form',
          },
        },
      ],
    },
    {
      name: 'variables',
      type: 'array',
      admin: {
        description: 'Variables/interpolations in the translation',
      },
      fields: [
        {
          name: 'variable',
          type: 'text',
          required: true,
          admin: {
            description: 'Variable name (e.g., {{name}}, {count})',
          },
        },
        {
          name: 'description',
          type: 'text',
          admin: {
            description: 'Description of what this variable represents',
          },
        },
        {
          name: 'example',
          type: 'text',
          admin: {
            description: 'Example value for this variable',
          },
        },
      ],
    },
    {
      name: 'reviewStatus',
      type: 'select',
      options: [
        { label: 'Not Reviewed', value: 'not_reviewed' },
        { label: 'In Review', value: 'in_review' },
        { label: 'Approved', value: 'approved' },
        { label: 'Rejected', value: 'rejected' },
        { label: 'Needs Changes', value: 'needs_changes' },
      ],
      defaultValue: 'not_reviewed',
      admin: {
        description: 'Review status of the translation',
      },
    },
    {
      name: 'reviewComments',
      type: 'textarea',
      admin: {
        condition: (data: any) => ['rejected', 'needs_changes'].includes(data?.reviewStatus),
        description: 'Comments from the reviewer',
        rows: 3,
      },
    },
    {
      name: 'reviewedBy',
      type: 'relationship',
      relationTo: 'users' as any as any,
      admin: {
        description: 'User who reviewed this translation',
        readOnly: true,
      },
    },
    {
      name: 'reviewedAt',
      type: 'date',
      admin: {
        description: 'When this translation was reviewed',
        readOnly: true,
      },
    },
    {
      name: 'translationMemory',
      type: 'group',
      admin: {
        description: 'Translation memory information',
      },
      fields: [
        {
          name: 'similarTranslations',
          type: 'array',
          admin: {
            description: 'Similar existing translations that could be reused',
          },
          fields: [
            {
              name: 'key',
              type: 'text',
              admin: {
                description: 'Similar translation key',
              },
            },
            {
              name: 'similarity',
              type: 'number',
              admin: {
                description: 'Similarity percentage (0-100)',
                readOnly: true,
              },
            },
          ],
        },
        {
          name: 'glossaryTerms',
          type: 'array',
          admin: {
            description: 'Glossary terms used in this translation',
          },
          fields: [
            {
              name: 'term',
              type: 'text',
              required: true,
              admin: {
                description: 'Glossary term',
              },
            },
            {
              name: 'translation',
              type: 'text',
              required: true,
              admin: {
                description: 'Translated term',
              },
            },
          ],
        },
      ],
    },
    {
      name: 'exportStatus',
      type: 'select',
      options: [
        { label: 'Not Exported', value: 'not_exported' },
        { label: 'Pending Export', value: 'pending' },
        { label: 'Exported', value: 'exported' },
        { label: 'Export Failed', value: 'failed' },
      ],
      defaultValue: 'not_exported',
      admin: {
        description: 'Export status for localization files',
        readOnly: true,
      },
    },
    {
      name: 'tags',
      type: 'array',
      admin: {
        description: 'Tags for organizing translations',
      },
      fields: [
        {
          name: 'tag',
          type: 'text',
          required: true,
          admin: {
            description: 'Tag name (e.g., "navigation", "content", "errors")',
          },
        },
      ],
    },
    {
      name: 'metadata',
      type: 'json',
      admin: {
        description: 'Additional metadata about this translation',
      },
    },
    {
      name: 'createdBy',
      type: 'relationship',
      relationTo: 'users' as any as any,
      admin: {
        readOnly: true,
        position: 'sidebar',
      },
      hooks: {
        beforeChange: [
          ({ req, operation, value }: any) => {
            if (operation === 'create' && !value) {
              return req.user?.id;
            }
            return value;
          },
        ],
      },
    },
    {
      name: 'tenant',
      type: 'relationship',
      relationTo: 'tenants' as any as any,
      required: true,
      admin: {
        position: 'sidebar',
        condition: (data: any, siblingData: any, { user }: any) => user?.role === 'admin',
      },
      hooks: {
        beforeChange: [
          ({ req, value }: any) => {
            if (!value && req.user && (req.user as any)?.role !== 'admin') {
              return (req.user as any)?.tenant?.id;
            }
            return value;
          },
        ],
      },
    },
  ],
  hooks: {
    beforeChange: [
      ({ data, operation, req }: any) => {
        // Auto-set tenant for non-admin users
        if (!data.tenant && req.user && (req.user as any)?.role !== 'admin') {
          data.tenant = (req.user as any)?.tenant?.id;
        }

        // Update last modified information
        if (req.user) {
          data.lastModifiedBy = req.user.id;
          data.lastModifiedAt = new Date().toISOString();
        }

        // Calculate character and word counts
        if (data.value) {
          data.characterCount = data.value.length;
          data.wordCount = data.value.trim().split(/\s+/).length;
        }

        return data;
      },
    ],
  },
  timestamps: true,
});

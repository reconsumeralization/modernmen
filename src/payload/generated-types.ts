// ðŸŽ¯ AMAZING Collection Types - Auto-generated
// Do not edit this file manually - it will be overwritten
// Generated by: scripts/generate-collection-types.ts
// Generated at: 2025-09-03T19:02:36.864Z

// Base types
export interface BaseCollection {
  id: string
  createdAt: Date
  updatedAt: Date
}

export interface Media extends BaseCollection {
  filename: string
  mimeType: string
  filesize: number
  width?: number
  height?: number
  alt?: string
  caption?: string
}

// BUILDER COLLECTIONS
// ========================================

// BUILDER - builder-animations
export interface BuilderAnimations {
  name: string
  description?: string
  type: 'fade-in' | 'fade-out' | 'slide-in' | 'slide-out' | 'scale' | 'rotate' | 'bounce' | 'pulse' | 'shake' | 'flip' | 'custom'
  duration?: string
  delay?: string
  timingFunction?: 'ease' | 'ease-in' | 'ease-out' | 'ease-in-out' | 'linear' | 'custom'
  customTimingFunction?: string
  direction?: 'normal' | 'reverse' | 'alternate' | 'alternate-reverse'
  iterationCount?: '1' | '2' | '3' | 'infinite' | 'custom'
  customIterationCount?: number
  fillMode?: 'none' | 'forwards' | 'backwards' | 'both'
  keyframes?: {
  css?: string
  animationName?: string
}
  trigger?: {
  triggerType?: 'load' | 'scroll' | 'hover' | 'click' | 'manual'
  scrollOffset?: number
  triggerSelector?: string
}
  responsive?: {
  disableOnMobile?: boolean
  disableOnTablet?: boolean
  mobileDuration?: string
  tabletDuration?: string
}
  preview?: {
  previewElement?: 'button' | 'image' | 'text' | 'card' | 'custom'
  previewHtml?: string
}
  isActive?: boolean
  isDefault?: boolean
  usageCount?: number
  categories?: Array<{
  category: string
}>
  tags?: Array<{
  tag: string
}>
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderAnimations {
  name: string
  description?: string
  type: 'fade-in' | 'fade-out' | 'slide-in' | 'slide-out' | 'scale' | 'rotate' | 'bounce' | 'pulse' | 'shake' | 'flip' | 'custom'
  duration?: string
  delay?: string
  timingFunction?: 'ease' | 'ease-in' | 'ease-out' | 'ease-in-out' | 'linear' | 'custom'
  customTimingFunction?: string
  direction?: 'normal' | 'reverse' | 'alternate' | 'alternate-reverse'
  iterationCount?: '1' | '2' | '3' | 'infinite' | 'custom'
  customIterationCount?: number
  fillMode?: 'none' | 'forwards' | 'backwards' | 'both'
  keyframes?: {
  css?: string
  animationName?: string
}
  trigger?: {
  triggerType?: 'load' | 'scroll' | 'hover' | 'click' | 'manual'
  scrollOffset?: number
  triggerSelector?: string
}
  responsive?: {
  disableOnMobile?: boolean
  disableOnTablet?: boolean
  mobileDuration?: string
  tabletDuration?: string
}
  preview?: {
  previewElement?: 'button' | 'image' | 'text' | 'card' | 'custom'
  previewHtml?: string
}
  isActive?: boolean
  isDefault?: boolean
  categories?: Array<{
  category: string
}>
  tags?: Array<{
  tag: string
}>
  tenant: Tenants
}

export interface UpdateBuilderAnimations extends Partial<CreateBuilderAnimations> {
  id: string
}

// BUILDER - builder-block-revisions
export interface BuilderBlockRevisions {
  version: string
  block: BuilderBlocks
  changeType: 'created' | 'updated' | 'cloned' | 'deleted' | 'restored' | 'content' | 'style' | 'layout'
  changeSummary?: string
  changedBy: Users
  previousRevision?: BuilderBlockRevisions
  snapshot?: {
  name?: string
  type?: string
  content?: Record<string, any>
  styling?: Record<string, any>
  settings?: Record<string, any>
  order?: number
  isActive?: boolean
}
  changes?: Array<{
  field: string
  oldValue?: string
  newValue?: string
  changeType?: 'added' | 'modified' | 'deleted' | 'reordered'
}>
  parentSection?: BuilderSections
  parentPage?: BuilderPages
  fileSize?: number
  isAutoSave?: boolean
  revertible?: boolean
  tags?: Array<{
  tag: string
}>
  metadata?: Record<string, any>
  tenant: Tenants
}

export interface CreateBuilderBlockRevisions {
  version: string
  block: BuilderBlocks
  changeType: 'created' | 'updated' | 'cloned' | 'deleted' | 'restored' | 'content' | 'style' | 'layout'
  changeSummary?: string
  changedBy: Users
  previousRevision?: BuilderBlockRevisions
  snapshot?: {
  name?: string
  type?: string
  content?: Record<string, any>
  styling?: Record<string, any>
  settings?: Record<string, any>
  order?: number
  isActive?: boolean
}
  changes?: Array<{
  field: string
  oldValue?: string
  newValue?: string
  changeType?: 'added' | 'modified' | 'deleted' | 'reordered'
}>
  parentSection?: BuilderSections
  parentPage?: BuilderPages
  isAutoSave?: boolean
  revertible?: boolean
  tags?: Array<{
  tag: string
}>
  metadata?: Record<string, any>
  tenant: Tenants
}

export interface UpdateBuilderBlockRevisions extends Partial<CreateBuilderBlockRevisions> {
  id: string
}

// BUILDER - builder-blocks
export interface BuilderBlocks {
  name: string
  description?: string
  type: 'text' | 'image' | 'gallery' | 'video' | 'cta' | 'form' | 'products' | 'blog_posts' | 'testimonials' | 'events' | 'services' | 'team' | 'contact' | 'social' | 'map' | 'html' | 'dynamic'
  order?: number
  isActive?: boolean
  content?: {
  text?: any
  image?: Media
  images?: Media
  videoUrl?: string
  ctaButton?: {
  text: string
  url: string
  style?: 'primary' | 'secondary' | 'outline'
  size?: 'small' | 'medium' | 'large'
}
  form?: Forms
  dynamicData?: BuilderDynamicData
  customHtml?: string
}
  styling?: {
  width?: 'full' | 'half' | 'third' | 'quarter' | 'auto'
  alignment?: 'left' | 'center' | 'right'
  backgroundColor?: string
  textColor?: string
  borderRadius?: string
  customClasses?: string
}
  spacing?: {
  margin?: {
  top?: string
  right?: string
  bottom?: string
  left?: string
}
  padding?: {
  top?: string
  right?: string
  bottom?: string
  left?: string
}
}
  animation?: BuilderAnimations
  conditionalRules?: BuilderConditionalRules
  reusableComponent?: BuilderReusableComponents
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderBlocks {
  name: string
  description?: string
  type: 'text' | 'image' | 'gallery' | 'video' | 'cta' | 'form' | 'products' | 'blog_posts' | 'testimonials' | 'events' | 'services' | 'team' | 'contact' | 'social' | 'map' | 'html' | 'dynamic'
  order?: number
  isActive?: boolean
  content?: {
  text?: any
  image?: Media
  images?: Media
  videoUrl?: string
  ctaButton?: {
  text: string
  url: string
  style?: 'primary' | 'secondary' | 'outline'
  size?: 'small' | 'medium' | 'large'
}
  form?: Forms
  dynamicData?: BuilderDynamicData
  customHtml?: string
}
  styling?: {
  width?: 'full' | 'half' | 'third' | 'quarter' | 'auto'
  alignment?: 'left' | 'center' | 'right'
  backgroundColor?: string
  textColor?: string
  borderRadius?: string
  customClasses?: string
}
  spacing?: {
  margin?: {
  top?: string
  right?: string
  bottom?: string
  left?: string
}
  padding?: {
  top?: string
  right?: string
  bottom?: string
  left?: string
}
}
  animation?: BuilderAnimations
  conditionalRules?: BuilderConditionalRules
  reusableComponent?: BuilderReusableComponents
  tenant: Tenants
}

export interface UpdateBuilderBlocks extends Partial<CreateBuilderBlocks> {
  id: string
}

// BUILDER - builder-conditional-rules
export interface BuilderConditionalRules {
  name: string
  description?: string
  ruleType: 'user' | 'content' | 'time' | 'location' | 'device' | 'custom'
  action: 'show' | 'hide' | 'replace' | 'style' | 'redirect'
  priority?: number
  userConditions?: {
  userRole?: 'admin' | 'manager' | 'editor' | 'user' | 'guest'
  userSegment?: CustomerTags
  isLoggedIn?: 'true' | 'false' | 'any'
  userId?: Users
}
  contentConditions?: {
  contentStatus?: 'draft' | 'published' | 'archived'
  contentType?: 'page' | 'post' | 'product' | 'event' | 'service'
  hasTag?: Tags
  hasCategory?: string
  fieldCondition?: {
  fieldName?: string
  fieldValue?: string
  fieldOperator?: 'equals' | 'not_equals' | 'contains' | 'greater_than' | 'less_than'
}
}
  timeConditions?: {
  startDate?: Date | string
  endDate?: Date | string
  daysOfWeek?: 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday'
  timeRange?: {
  startTime?: string
  endTime?: string
}
}
  locationConditions?: {
  countries?: Array<{
  countryCode: string
  countryName?: string
}>
  regions?: Array<{
  regionCode?: string
  regionName?: string
}>
  cities?: Array<{
  cityName: string
}>
}
  deviceConditions?: {
  deviceType?: 'desktop' | 'mobile' | 'tablet'
  browser?: 'chrome' | 'firefox' | 'safari' | 'edge' | 'other'
  operatingSystem?: 'windows' | 'macos' | 'linux' | 'ios' | 'android' | 'other'
}
  customCondition?: string
  alternativeContent?: {
  content?: any
  image?: Media
  redirectUrl?: string
}
  isActive?: boolean
  isGlobal?: boolean
  usageCount?: number
  lastTriggered?: Date | string
  tags?: Array<{
  tag: string
}>
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderConditionalRules {
  name: string
  description?: string
  ruleType: 'user' | 'content' | 'time' | 'location' | 'device' | 'custom'
  action: 'show' | 'hide' | 'replace' | 'style' | 'redirect'
  priority?: number
  userConditions?: {
  userRole?: 'admin' | 'manager' | 'editor' | 'user' | 'guest'
  userSegment?: CustomerTags
  isLoggedIn?: 'true' | 'false' | 'any'
  userId?: Users
}
  contentConditions?: {
  contentStatus?: 'draft' | 'published' | 'archived'
  contentType?: 'page' | 'post' | 'product' | 'event' | 'service'
  hasTag?: Tags
  hasCategory?: string
  fieldCondition?: {
  fieldName?: string
  fieldValue?: string
  fieldOperator?: 'equals' | 'not_equals' | 'contains' | 'greater_than' | 'less_than'
}
}
  timeConditions?: {
  startDate?: Date | string
  endDate?: Date | string
  daysOfWeek?: 'monday' | 'tuesday' | 'wednesday' | 'thursday' | 'friday' | 'saturday' | 'sunday'
  timeRange?: {
  startTime?: string
  endTime?: string
}
}
  locationConditions?: {
  countries?: Array<{
  countryCode: string
  countryName?: string
}>
  regions?: Array<{
  regionCode?: string
  regionName?: string
}>
  cities?: Array<{
  cityName: string
}>
}
  deviceConditions?: {
  deviceType?: 'desktop' | 'mobile' | 'tablet'
  browser?: 'chrome' | 'firefox' | 'safari' | 'edge' | 'other'
  operatingSystem?: 'windows' | 'macos' | 'linux' | 'ios' | 'android' | 'other'
}
  customCondition?: string
  alternativeContent?: {
  content?: any
  image?: Media
  redirectUrl?: string
}
  isActive?: boolean
  isGlobal?: boolean
  tags?: Array<{
  tag: string
}>
  tenant: Tenants
}

export interface UpdateBuilderConditionalRules extends Partial<CreateBuilderConditionalRules> {
  id: string
}

// BUILDER - builder-drafts
export interface BuilderDrafts {
  name: string
  description?: string
  parentPage?: BuilderPages
  template?: BuilderTemplates
  status: 'draft' | 'review' | 'approved' | 'rejected' | 'ready'
  version?: string
  content?: {
  title?: string
  slug?: string
  sections?: BuilderSections
  layout?: BuilderLayouts
  theme?: BuilderThemes
}
  changes?: Array<{
  field: string
  changeType?: 'added' | 'modified' | 'deleted' | 'moved'
  oldValue?: string
  newValue?: string
  timestamp: Date | string
}>
  collaborators?: Users
  reviewers?: Users
  reviewComments?: Array<{
  comment: string
  author: Users
  type?: 'comment' | 'approval' | 'rejection' | 'suggestion'
  timestamp: Date | string
  resolved?: boolean
}>
  autoSave?: boolean
  autoSaveInterval?: number
  lockExpiresAt?: Date | string
  lastModifiedBy?: Users
  publishScheduledAt?: Date | string
  previewUrl?: string
  tags?: Array<{
  tag: string
}>
  metadata?: Record<string, any>
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderDrafts {
  name: string
  description?: string
  parentPage?: BuilderPages
  template?: BuilderTemplates
  status: 'draft' | 'review' | 'approved' | 'rejected' | 'ready'
  version?: string
  content?: {
  title?: string
  slug?: string
  sections?: BuilderSections
  layout?: BuilderLayouts
  theme?: BuilderThemes
}
  changes?: Array<{
  field: string
  changeType?: 'added' | 'modified' | 'deleted' | 'moved'
  oldValue?: string
  newValue?: string
  timestamp: Date | string
}>
  collaborators?: Users
  reviewers?: Users
  reviewComments?: Array<{
  comment: string
  author: Users
  type?: 'comment' | 'approval' | 'rejection' | 'suggestion'
  timestamp: Date | string
  resolved?: boolean
}>
  autoSave?: boolean
  autoSaveInterval?: number
  lockExpiresAt?: Date | string
  publishScheduledAt?: Date | string
  tags?: Array<{
  tag: string
}>
  metadata?: Record<string, any>
  tenant: Tenants
}

export interface UpdateBuilderDrafts extends Partial<CreateBuilderDrafts> {
  id: string
}

// BUILDER - builder-dynamic-data
export interface BuilderDynamicData {
  name: string
  description?: string
  sourceCollection: 'products' | 'blog-posts' | 'testimonials' | 'events' | 'services' | 'team' | 'pages' | 'customers' | 'categories' | 'tags' | 'media' | 'custom'
  queryType: 'all' | 'filtered' | 'single' | 'latest' | 'featured' | 'random' | 'related' | 'custom'
  filters?: {
  whereConditions?: Array<{
  field: string
  operator: 'equals' | 'not_equals' | 'greater_than' | 'less_than' | 'greater_than_equal' | 'less_than_equal' | 'like' | 'in' | 'not_in' | 'exists'
  value?: string
}>
  tagFilter?: Tags
  categoryFilter?: string
  statusFilter?: 'draft' | 'published' | 'archived'
}
  singleRecord?: Products
  limit?: number
  offset?: number
  sort?: {
  sortField?: string
  sortOrder?: 'asc' | 'desc'
}
  displayFields?: Array<{
  field: string
  label?: string
  type?: 'text' | 'image' | 'url' | 'date' | 'number' | 'boolean'
}>
  customQuery?: string
  caching?: {
  cacheEnabled?: boolean
  cacheDuration?: number
  cacheKey?: string
}
  transformations?: {
  transformEnabled?: boolean
  transformScript?: string
}
  isActive?: boolean
  usageCount?: number
  lastQueried?: Date | string
  preview?: string
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderDynamicData {
  name: string
  description?: string
  sourceCollection: 'products' | 'blog-posts' | 'testimonials' | 'events' | 'services' | 'team' | 'pages' | 'customers' | 'categories' | 'tags' | 'media' | 'custom'
  queryType: 'all' | 'filtered' | 'single' | 'latest' | 'featured' | 'random' | 'related' | 'custom'
  filters?: {
  whereConditions?: Array<{
  field: string
  operator: 'equals' | 'not_equals' | 'greater_than' | 'less_than' | 'greater_than_equal' | 'less_than_equal' | 'like' | 'in' | 'not_in' | 'exists'
  value?: string
}>
  tagFilter?: Tags
  categoryFilter?: string
  statusFilter?: 'draft' | 'published' | 'archived'
}
  singleRecord?: Products
  limit?: number
  offset?: number
  sort?: {
  sortField?: string
  sortOrder?: 'asc' | 'desc'
}
  displayFields?: Array<{
  field: string
  label?: string
  type?: 'text' | 'image' | 'url' | 'date' | 'number' | 'boolean'
}>
  customQuery?: string
  caching?: {
  cacheEnabled?: boolean
  cacheDuration?: number
  cacheKey?: string
}
  transformations?: {
  transformEnabled?: boolean
  transformScript?: string
}
  isActive?: boolean
  tenant: Tenants
}

export interface UpdateBuilderDynamicData extends Partial<CreateBuilderDynamicData> {
  id: string
}

// BUILDER - forms
export interface Forms {
  name: string
  fields?: Array<{
  name: string
  label: string
  type: 'text' | 'textarea' | 'email' | 'number' | 'checkbox' | 'select'
  required?: boolean
  options?: Array<{
  option?: string
}>
}>
  submitButtonText?: string
  redirectUrl?: string
}

export interface CreateForms {
  name: string
  fields?: Array<{
  name: string
  label: string
  type: 'text' | 'textarea' | 'email' | 'number' | 'checkbox' | 'select'
  required?: boolean
  options?: Array<{
  option?: string
}>
}>
  submitButtonText?: string
  redirectUrl?: string
}

export interface UpdateForms extends Partial<CreateForms> {
  id: string
}

// BUILDER - builder-global-styles
export interface BuilderGlobalStyles {
  name: string
  description?: string
  type: 'css' | 'scss' | 'less' | 'custom'
  code: string
  scope?: 'global' | 'page' | 'component' | 'theme'
  priority?: number
  isActive?: boolean
  isCritical?: boolean
  mediaQuery?: string
  dependencies?: Array<{
  style: BuilderGlobalStyles
  loadOrder?: number
}>
  variables?: {
  cssVariables?: Array<{
  name: string
  value: string
  description?: string
}>
}
  selectors?: {
  targetSelectors?: Array<{
  selector: string
  description?: string
}>
}
  frameworkIntegration?: {
  tailwindConfig?: string
  bootstrapOverrides?: string
}
  performance?: {
  minify?: boolean
  sourceMap?: boolean
  cacheBusting?: boolean
}
  testing?: {
  validateSyntax?: boolean
  checkConflicts?: boolean
  previewMode?: boolean
}
  categories?: Array<{
  category: string
}>
  tags?: Array<{
  tag: string
}>
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderGlobalStyles {
  name: string
  description?: string
  type: 'css' | 'scss' | 'less' | 'custom'
  code: string
  scope?: 'global' | 'page' | 'component' | 'theme'
  priority?: number
  isActive?: boolean
  isCritical?: boolean
  mediaQuery?: string
  dependencies?: Array<{
  style: BuilderGlobalStyles
  loadOrder?: number
}>
  variables?: {
  cssVariables?: Array<{
  name: string
  value: string
  description?: string
}>
}
  selectors?: {
  targetSelectors?: Array<{
  selector: string
  description?: string
}>
}
  frameworkIntegration?: {
  tailwindConfig?: string
  bootstrapOverrides?: string
}
  performance?: {
  minify?: boolean
  sourceMap?: boolean
  cacheBusting?: boolean
}
  testing?: {
  validateSyntax?: boolean
  checkConflicts?: boolean
  previewMode?: boolean
}
  categories?: Array<{
  category: string
}>
  tags?: Array<{
  tag: string
}>
  tenant: Tenants
}

export interface UpdateBuilderGlobalStyles extends Partial<CreateBuilderGlobalStyles> {
  id: string
}

// BUILDER - builder-integrations
export interface BuilderIntegrations {
  name: string
  description?: string
  provider: 'google-maps' | 'google-analytics' | 'shopify' | 'mailchimp' | 'stripe' | 'paypal' | 'youtube' | 'vimeo' | 'instagram' | 'twitter' | 'facebook' | 'weather' | 'stock' | 'custom' | 'webhook' | 'rss' | 'database'
  type: 'maps' | 'forms' | 'feeds' | 'analytics' | 'social' | 'ecommerce' | 'payment' | 'media' | 'weather' | 'data' | 'custom'
  isActive?: boolean
  isGlobal?: boolean
  configuration?: {
  apiKey?: string
  apiSecret?: string
  accessToken?: string
  refreshToken?: string
  baseUrl?: string
  webhookUrl?: string
  webhookSecret?: string
  headers?: Record<string, any>
  rateLimit?: {
  requestsPerMinute?: number
  requestsPerHour?: number
}
}
  mapping?: {
  sourceFields?: Array<{
  sourceField: string
  dataType?: 'string' | 'number' | 'boolean' | 'date' | 'array' | 'object'
  description?: string
}>
  fieldMapping?: Array<{
  sourceField: string
  targetField: string
  transform?: string
}>
}
  syncSettings?: {
  syncEnabled?: boolean
  syncFrequency?: 'realtime' | '5min' | '15min' | 'hourly' | '6hours' | 'daily' | 'weekly' | 'manual'
  lastSyncedAt?: Date | string
  nextSyncAt?: Date | string
  syncErrors?: Array<{
  error?: string
  timestamp?: Date | string
}>
}
  caching?: {
  cacheEnabled?: boolean
  cacheDuration?: number
  cacheKey?: string
}
  blocks?: BuilderBlocks
  connectionStatus?: 'not_tested' | 'success' | 'failed'
  documentation?: {
  setupInstructions?: any
  apiDocsUrl?: string
  supportUrl?: string
}
  usageCount?: number
  tags?: Array<{
  tag: string
}>
  metadata?: Record<string, any>
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderIntegrations {
  name: string
  description?: string
  provider: 'google-maps' | 'google-analytics' | 'shopify' | 'mailchimp' | 'stripe' | 'paypal' | 'youtube' | 'vimeo' | 'instagram' | 'twitter' | 'facebook' | 'weather' | 'stock' | 'custom' | 'webhook' | 'rss' | 'database'
  type: 'maps' | 'forms' | 'feeds' | 'analytics' | 'social' | 'ecommerce' | 'payment' | 'media' | 'weather' | 'data' | 'custom'
  isActive?: boolean
  isGlobal?: boolean
  configuration?: {
  apiKey?: string
  apiSecret?: string
  accessToken?: string
  refreshToken?: string
  baseUrl?: string
  webhookUrl?: string
  webhookSecret?: string
  headers?: Record<string, any>
  rateLimit?: {
  requestsPerMinute?: number
  requestsPerHour?: number
}
}
  mapping?: {
  sourceFields?: Array<{
  sourceField: string
  dataType?: 'string' | 'number' | 'boolean' | 'date' | 'array' | 'object'
  description?: string
}>
  fieldMapping?: Array<{
  sourceField: string
  targetField: string
  transform?: string
}>
}
  syncSettings?: {
  syncEnabled?: boolean
  syncFrequency?: 'realtime' | '5min' | '15min' | 'hourly' | '6hours' | 'daily' | 'weekly' | 'manual'
  lastSyncedAt?: Date | string
  nextSyncAt?: Date | string
  syncErrors?: Array<{
  error?: string
  timestamp?: Date | string
}>
}
  caching?: {
  cacheEnabled?: boolean
  cacheDuration?: number
  cacheKey?: string
}
  blocks?: BuilderBlocks
  documentation?: {
  setupInstructions?: any
  apiDocsUrl?: string
  supportUrl?: string
}
  tags?: Array<{
  tag: string
}>
  metadata?: Record<string, any>
  tenant: Tenants
}

export interface UpdateBuilderIntegrations extends Partial<CreateBuilderIntegrations> {
  id: string
}

// BUILDER - builder-layouts
export interface BuilderLayouts {
  name: string
  description?: string
  type: 'grid' | 'flex' | 'css-grid' | 'custom'
  columns?: number
  gridSettings?: {
  gap?: string
  justifyItems?: 'start' | 'center' | 'end' | 'stretch'
  alignItems?: 'start' | 'center' | 'end' | 'stretch'
}
  flexSettings?: {
  direction?: 'row' | 'column' | 'row-reverse' | 'column-reverse'
  justifyContent?: 'flex-start' | 'center' | 'flex-end' | 'space-between' | 'space-around' | 'space-evenly'
  alignItems?: 'flex-start' | 'center' | 'flex-end' | 'stretch' | 'baseline'
  wrap?: 'nowrap' | 'wrap' | 'wrap-reverse'
}
  cssGridSettings?: {
  gridTemplateColumns?: string
  gridTemplateRows?: string
  gridGap?: string
  justifyItems?: 'start' | 'center' | 'end' | 'stretch'
  alignItems?: 'start' | 'center' | 'end' | 'stretch'
}
  customCss?: string
  previewImage?: Media
  isActive?: boolean
  isDefault?: boolean
  category?: 'general' | 'hero' | 'content' | 'gallery' | 'footer' | 'sidebar' | 'custom'
  responsive?: {
  mobileColumns?: number
  tabletColumns?: number
  desktopColumns?: number
  mobileDirection?: 'row' | 'column'
}
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderLayouts {
  name: string
  description?: string
  type: 'grid' | 'flex' | 'css-grid' | 'custom'
  columns?: number
  gridSettings?: {
  gap?: string
  justifyItems?: 'start' | 'center' | 'end' | 'stretch'
  alignItems?: 'start' | 'center' | 'end' | 'stretch'
}
  flexSettings?: {
  direction?: 'row' | 'column' | 'row-reverse' | 'column-reverse'
  justifyContent?: 'flex-start' | 'center' | 'flex-end' | 'space-between' | 'space-around' | 'space-evenly'
  alignItems?: 'flex-start' | 'center' | 'flex-end' | 'stretch' | 'baseline'
  wrap?: 'nowrap' | 'wrap' | 'wrap-reverse'
}
  cssGridSettings?: {
  gridTemplateColumns?: string
  gridTemplateRows?: string
  gridGap?: string
  justifyItems?: 'start' | 'center' | 'end' | 'stretch'
  alignItems?: 'start' | 'center' | 'end' | 'stretch'
}
  customCss?: string
  previewImage?: Media
  isActive?: boolean
  isDefault?: boolean
  category?: 'general' | 'hero' | 'content' | 'gallery' | 'footer' | 'sidebar' | 'custom'
  responsive?: {
  mobileColumns?: number
  tabletColumns?: number
  desktopColumns?: number
  mobileDirection?: 'row' | 'column'
}
  tenant: Tenants
}

export interface UpdateBuilderLayouts extends Partial<CreateBuilderLayouts> {
  id: string
}

// BUILDER - builder-page-revisions
export interface BuilderPageRevisions {
  version: string
  page: BuilderPages
  changeType: 'created' | 'updated' | 'published' | 'unpublished' | 'archived' | 'restored' | 'major' | 'minor'
  changeSummary?: string
  changedBy: Users
  previousRevision?: BuilderPageRevisions
  snapshot?: {
  title?: string
  slug?: string
  content?: Record<string, any>
  sections?: Record<string, any>
  blocks?: Record<string, any>
  layout?: Record<string, any>
  theme?: Record<string, any>
  seo?: Record<string, any>
}
  changes?: Array<{
  field: string
  oldValue?: string
  newValue?: string
  changeType?: 'added' | 'modified' | 'deleted' | 'reordered'
}>
  fileSize?: number
  isMajorVersion?: boolean
  tags?: Array<{
  tag: string
}>
  metadata?: Record<string, any>
  tenant: Tenants
}

export interface CreateBuilderPageRevisions {
  version: string
  page: BuilderPages
  changeType: 'created' | 'updated' | 'published' | 'unpublished' | 'archived' | 'restored' | 'major' | 'minor'
  changeSummary?: string
  changedBy: Users
  previousRevision?: BuilderPageRevisions
  snapshot?: {
  title?: string
  slug?: string
  content?: Record<string, any>
  sections?: Record<string, any>
  blocks?: Record<string, any>
  layout?: Record<string, any>
  theme?: Record<string, any>
  seo?: Record<string, any>
}
  changes?: Array<{
  field: string
  oldValue?: string
  newValue?: string
  changeType?: 'added' | 'modified' | 'deleted' | 'reordered'
}>
  isMajorVersion?: boolean
  tags?: Array<{
  tag: string
}>
  metadata?: Record<string, any>
  tenant: Tenants
}

export interface UpdateBuilderPageRevisions extends Partial<CreateBuilderPageRevisions> {
  id: string
}

// BUILDER - builder-pages
export interface BuilderPages {
  title: string
  slug: string
  description?: string
  status: 'draft' | 'published' | 'archived'
  template?: BuilderTemplates
  sections?: BuilderSections
  layout?: BuilderLayouts
  theme?: BuilderThemes
  seo?: {
  metaTitle?: string
  metaDescription?: string
  canonicalUrl?: string
  noIndex?: boolean
}
  pageType?: 'landing' | 'about' | 'contact' | 'service' | 'product' | 'blog' | 'custom'
  conditionalRules?: BuilderConditionalRules
  dynamicData?: BuilderDynamicData
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderPages {
  title: string
  slug: string
  description?: string
  status: 'draft' | 'published' | 'archived'
  template?: BuilderTemplates
  sections?: BuilderSections
  layout?: BuilderLayouts
  theme?: BuilderThemes
  seo?: {
  metaTitle?: string
  metaDescription?: string
  canonicalUrl?: string
  noIndex?: boolean
}
  pageType?: 'landing' | 'about' | 'contact' | 'service' | 'product' | 'blog' | 'custom'
  conditionalRules?: BuilderConditionalRules
  dynamicData?: BuilderDynamicData
  tenant: Tenants
}

export interface UpdateBuilderPages extends Partial<CreateBuilderPages> {
  id: string
}

// BUILDER - builder-publish-queue
export interface BuilderPublishQueue {
  itemType: 'page' | 'section' | 'block' | 'template' | 'theme' | 'global-style' | 'reusable-component'
  itemId: string
  itemName: string
  itemSlug?: string
  status: 'pending' | 'scheduled' | 'processing' | 'published' | 'failed' | 'cancelled' | 'rejected'
  priority?: 'low' | 'normal' | 'high' | 'critical'
  scheduledAt?: Date | string
  requestedBy: Users
  approvedBy?: Users
  approvedAt?: Date | string
  publishedAt?: Date | string
  description?: string
  changes?: Array<{
  changeType?: 'new' | 'updated' | 'deleted' | 'moved'
  description: string
  affectedItems?: string
}>
  dependencies?: Array<{
  itemType: 'page' | 'section' | 'block' | 'template' | 'theme'
  itemId: string
  itemName: string
}>
  reviewRequired?: boolean
  reviewComments?: string
  rollbackAvailable?: boolean
  rollbackSnapshot?: Record<string, any>
  errorMessage?: string
  retryCount?: number
  maxRetries?: number
  estimatedPublishTime?: number
  actualPublishTime?: number
  targetEnvironment?: 'staging' | 'production' | 'development'
  tags?: Array<{
  tag: string
}>
  metadata?: Record<string, any>
  tenant: Tenants
}

export interface CreateBuilderPublishQueue {
  itemType: 'page' | 'section' | 'block' | 'template' | 'theme' | 'global-style' | 'reusable-component'
  itemId: string
  itemName: string
  itemSlug?: string
  status: 'pending' | 'scheduled' | 'processing' | 'published' | 'failed' | 'cancelled' | 'rejected'
  priority?: 'low' | 'normal' | 'high' | 'critical'
  scheduledAt?: Date | string
  requestedBy: Users
  description?: string
  changes?: Array<{
  changeType?: 'new' | 'updated' | 'deleted' | 'moved'
  description: string
  affectedItems?: string
}>
  dependencies?: Array<{
  itemType: 'page' | 'section' | 'block' | 'template' | 'theme'
  itemId: string
  itemName: string
}>
  reviewRequired?: boolean
  reviewComments?: string
  rollbackAvailable?: boolean
  rollbackSnapshot?: Record<string, any>
  errorMessage?: string
  maxRetries?: number
  estimatedPublishTime?: number
  targetEnvironment?: 'staging' | 'production' | 'development'
  tags?: Array<{
  tag: string
}>
  metadata?: Record<string, any>
  tenant: Tenants
}

export interface UpdateBuilderPublishQueue extends Partial<CreateBuilderPublishQueue> {
  id: string
}

// BUILDER - builder-reusable-components
export interface BuilderReusableComponents {
  name: string
  description?: string
  type: 'cta' | 'banner' | 'card' | 'hero' | 'testimonial' | 'form' | 'gallery' | 'pricing' | 'social-proof' | 'newsletter' | 'footer' | 'header' | 'custom'
  category?: 'marketing' | 'content' | 'navigation' | 'conversion' | 'social' | 'utility' | 'custom'
  previewImage?: Media
  content?: {
  title?: string
  subtitle?: string
  description?: any
  image?: Media
  backgroundImage?: Media
}
  actions?: {
  primaryAction?: {
  text?: string
  url?: string
  style?: 'primary' | 'secondary' | 'outline' | 'link'
}
  secondaryAction?: {
  text?: string
  url?: string
}
}
  styling?: {
  theme?: BuilderThemes
  customCss?: string
  customClasses?: string
}
  layout?: BuilderLayouts
  animation?: BuilderAnimations
  dynamicData?: BuilderDynamicData
  conditionalRules?: BuilderConditionalRules
  variations?: Array<{
  name: string
  description?: string
  previewImage?: Media
  settings?: Record<string, any>
}>
  isActive?: boolean
  isGlobal?: boolean
  usageCount?: number
  lastUsed?: Date | string
  usedInPages?: BuilderPages
  tags?: Array<{
  tag: string
}>
  documentation?: {
  usageInstructions?: any
  customizationNotes?: string
}
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderReusableComponents {
  name: string
  description?: string
  type: 'cta' | 'banner' | 'card' | 'hero' | 'testimonial' | 'form' | 'gallery' | 'pricing' | 'social-proof' | 'newsletter' | 'footer' | 'header' | 'custom'
  category?: 'marketing' | 'content' | 'navigation' | 'conversion' | 'social' | 'utility' | 'custom'
  previewImage?: Media
  content?: {
  title?: string
  subtitle?: string
  description?: any
  image?: Media
  backgroundImage?: Media
}
  actions?: {
  primaryAction?: {
  text?: string
  url?: string
  style?: 'primary' | 'secondary' | 'outline' | 'link'
}
  secondaryAction?: {
  text?: string
  url?: string
}
}
  styling?: {
  theme?: BuilderThemes
  customCss?: string
  customClasses?: string
}
  layout?: BuilderLayouts
  animation?: BuilderAnimations
  dynamicData?: BuilderDynamicData
  conditionalRules?: BuilderConditionalRules
  variations?: Array<{
  name: string
  description?: string
  previewImage?: Media
  settings?: Record<string, any>
}>
  isActive?: boolean
  isGlobal?: boolean
  tags?: Array<{
  tag: string
}>
  documentation?: {
  usageInstructions?: any
  customizationNotes?: string
}
  tenant: Tenants
}

export interface UpdateBuilderReusableComponents extends Partial<CreateBuilderReusableComponents> {
  id: string
}

// BUILDER - builder-sections
export interface BuilderSections {
  name: string
  description?: string
  type: 'header' | 'hero' | 'features' | 'content' | 'gallery' | 'testimonials' | 'cta' | 'footer' | 'sidebar' | 'custom'
  blocks?: BuilderBlocks
  layout?: BuilderLayouts
  order?: number
  isActive?: boolean
  isFullWidth?: boolean
  backgroundColor?: string
  backgroundImage?: Media
  padding?: {
  top?: string
  right?: string
  bottom?: string
  left?: string
}
  margin?: {
  top?: string
  bottom?: string
}
  animation?: BuilderAnimations
  conditionalRules?: BuilderConditionalRules
  reusableComponent?: BuilderReusableComponents
  customClasses?: string
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderSections {
  name: string
  description?: string
  type: 'header' | 'hero' | 'features' | 'content' | 'gallery' | 'testimonials' | 'cta' | 'footer' | 'sidebar' | 'custom'
  blocks?: BuilderBlocks
  layout?: BuilderLayouts
  order?: number
  isActive?: boolean
  isFullWidth?: boolean
  backgroundColor?: string
  backgroundImage?: Media
  padding?: {
  top?: string
  right?: string
  bottom?: string
  left?: string
}
  margin?: {
  top?: string
  bottom?: string
}
  animation?: BuilderAnimations
  conditionalRules?: BuilderConditionalRules
  reusableComponent?: BuilderReusableComponents
  customClasses?: string
  tenant: Tenants
}

export interface UpdateBuilderSections extends Partial<CreateBuilderSections> {
  id: string
}

// BUILDER - builder-seo
export interface BuilderSeo {
  itemType: 'page' | 'section' | 'block' | 'template'
  itemId: string
  url: string
  title: string
  metaDescription?: string
  keywords?: Array<{
  keyword: string
  priority?: 'high' | 'medium' | 'low'
  searchVolume?: number
  competition?: 'low' | 'medium' | 'high'
}>
  canonicalUrl?: string
  noIndex?: boolean
  noFollow?: boolean
  openGraph?: {
  ogTitle?: string
  ogDescription?: string
  ogImage?: Media
  ogType?: 'website' | 'article' | 'product' | 'profile'
  ogSiteName?: string
}
  twitterCard?: {
  twitterCard?: 'summary' | 'summary_large_image' | 'app' | 'player'
  twitterTitle?: string
  twitterDescription?: string
  twitterImage?: Media
}
  structuredData?: {
  schemaType?: 'article' | 'product' | 'event' | 'organization' | 'person' | 'webpage' | 'breadcrumb' | 'faq' | 'howto' | 'custom'
  jsonLd?: string
}
  seoScore?: number
  seoIssues?: Array<{
  issue?: string
  severity?: 'critical' | 'warning' | 'info'
  suggestion?: string
}>
  lastAnalyzedAt?: Date | string
  seoAnalysisResult?: string
  internalLinks?: Array<{
  url?: string
  anchorText?: string
  nofollow?: boolean
}>
  externalLinks?: Array<{
  url?: string
  anchorText?: string
  nofollow?: boolean
}>
  images?: Array<{
  src?: string
  alt?: string
  hasAlt?: boolean
  altQuality?: 'good' | 'poor' | 'missing'
}>
  performance?: {
  pageSpeed?: number
  mobileFriendly?: boolean
  coreWebVitals?: {
  lcp?: number
  fid?: number
  cls?: number
}
}
  competitorAnalysis?: {
  competitors?: Array<{
  url: string
  domainAuthority?: number
  backlinks?: number
}>
}
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderSeo {
  itemType: 'page' | 'section' | 'block' | 'template'
  itemId: string
  url: string
  title: string
  metaDescription?: string
  keywords?: Array<{
  keyword: string
  priority?: 'high' | 'medium' | 'low'
  searchVolume?: number
  competition?: 'low' | 'medium' | 'high'
}>
  canonicalUrl?: string
  noIndex?: boolean
  noFollow?: boolean
  openGraph?: {
  ogTitle?: string
  ogDescription?: string
  ogImage?: Media
  ogType?: 'website' | 'article' | 'product' | 'profile'
  ogSiteName?: string
}
  twitterCard?: {
  twitterCard?: 'summary' | 'summary_large_image' | 'app' | 'player'
  twitterTitle?: string
  twitterDescription?: string
  twitterImage?: Media
}
  structuredData?: {
  schemaType?: 'article' | 'product' | 'event' | 'organization' | 'person' | 'webpage' | 'breadcrumb' | 'faq' | 'howto' | 'custom'
  jsonLd?: string
}
  internalLinks?: Array<{
  url?: string
  anchorText?: string
  nofollow?: boolean
}>
  externalLinks?: Array<{
  url?: string
  anchorText?: string
  nofollow?: boolean
}>
  images?: Array<{
  src?: string
  alt?: string
  hasAlt?: boolean
  altQuality?: 'good' | 'poor' | 'missing'
}>
  performance?: {
  pageSpeed?: number
  mobileFriendly?: boolean
  coreWebVitals?: {
  lcp?: number
  fid?: number
  cls?: number
}
}
  competitorAnalysis?: {
  competitors?: Array<{
  url: string
  domainAuthority?: number
  backlinks?: number
}>
}
  tenant: Tenants
}

export interface UpdateBuilderSeo extends Partial<CreateBuilderSeo> {
  id: string
}

// BUILDER - builder-templates
export interface BuilderTemplates {
  name: string
  description?: string
  category?: 'landing' | 'about' | 'contact' | 'service' | 'product' | 'blog' | 'portfolio' | 'custom'
  previewImage?: Media
  sections?: BuilderSections
  defaultLayout?: BuilderLayouts
  defaultTheme?: BuilderThemes
  isActive?: boolean
  isDefault?: boolean
  usageCount?: number
  tags?: Array<{
  tag: string
}>
  defaultBlocks?: Array<{
  section: BuilderSections
  block: BuilderBlocks
  order?: number
}>
  seoDefaults?: {
  metaTitle?: string
  metaDescription?: string
  canonicalUrl?: string
}
  customCss?: string
  customJs?: string
  responsiveSettings?: {
  mobileLayout?: BuilderLayouts
  tabletLayout?: BuilderLayouts
  desktopLayout?: BuilderLayouts
}
  pages?: BuilderPages
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderTemplates {
  name: string
  description?: string
  category?: 'landing' | 'about' | 'contact' | 'service' | 'product' | 'blog' | 'portfolio' | 'custom'
  previewImage?: Media
  sections?: BuilderSections
  defaultLayout?: BuilderLayouts
  defaultTheme?: BuilderThemes
  isActive?: boolean
  isDefault?: boolean
  tags?: Array<{
  tag: string
}>
  defaultBlocks?: Array<{
  section: BuilderSections
  block: BuilderBlocks
  order?: number
}>
  seoDefaults?: {
  metaTitle?: string
  metaDescription?: string
  canonicalUrl?: string
}
  customCss?: string
  customJs?: string
  responsiveSettings?: {
  mobileLayout?: BuilderLayouts
  tabletLayout?: BuilderLayouts
  desktopLayout?: BuilderLayouts
}
  tenant: Tenants
}

export interface UpdateBuilderTemplates extends Partial<CreateBuilderTemplates> {
  id: string
}

// BUILDER - builder-themes
export interface BuilderThemes {
  name: string
  description?: string
  category?: 'business' | 'creative' | 'minimal' | 'bold' | 'elegant' | 'modern' | 'custom'
  colors?: {
  primary?: string
  secondary?: string
  accent?: string
  text?: string
  textLight?: string
  background?: string
  backgroundSecondary?: string
  border?: string
  success?: string
  warning?: string
  error?: string
}
  typography?: {
  fontFamily?: string
  fontFamilyHeading?: string
  fontSize?: {
  xs?: string
  sm?: string
  base?: string
  lg?: string
  xl?: string
  '2xl'?: string
  '3xl'?: string
  '4xl'?: string
}
  fontWeight?: {
  light?: string
  normal?: string
  medium?: string
  semibold?: string
  bold?: string
}
  lineHeight?: {
  tight?: string
  normal?: string
  relaxed?: string
}
}
  spacing?: {
  spacing?: {
  '1'?: string
  '2'?: string
  '3'?: string
  '4'?: string
  '5'?: string
  '6'?: string
  '8'?: string
  '10'?: string
  '12'?: string
  '16'?: string
  '20'?: string
  '24'?: string
}
  borderRadius?: {
  none?: string
  sm?: string
  md?: string
  lg?: string
  xl?: string
  '2xl'?: string
  full?: string
}
}
  shadows?: {
  sm?: string
  md?: string
  lg?: string
  xl?: string
}
  buttons?: {
  primary?: {
  backgroundColor?: string
  textColor?: string
  borderRadius?: string
  padding?: string
}
  secondary?: {
  backgroundColor?: string
  textColor?: string
  borderRadius?: string
  padding?: string
}
}
  previewImage?: Media
  isActive?: boolean
  isDefault?: boolean
  usageCount?: number
  customCss?: string
  createdBy?: Users
  tenant: Tenants
}

export interface CreateBuilderThemes {
  name: string
  description?: string
  category?: 'business' | 'creative' | 'minimal' | 'bold' | 'elegant' | 'modern' | 'custom'
  colors?: {
  primary?: string
  secondary?: string
  accent?: string
  text?: string
  textLight?: string
  background?: string
  backgroundSecondary?: string
  border?: string
  success?: string
  warning?: string
  error?: string
}
  typography?: {
  fontFamily?: string
  fontFamilyHeading?: string
  fontSize?: {
  xs?: string
  sm?: string
  base?: string
  lg?: string
  xl?: string
  '2xl'?: string
  '3xl'?: string
  '4xl'?: string
}
  fontWeight?: {
  light?: string
  normal?: string
  medium?: string
  semibold?: string
  bold?: string
}
  lineHeight?: {
  tight?: string
  normal?: string
  relaxed?: string
}
}
  spacing?: {
  spacing?: {
  '1'?: string
  '2'?: string
  '3'?: string
  '4'?: string
  '5'?: string
  '6'?: string
  '8'?: string
  '10'?: string
  '12'?: string
  '16'?: string
  '20'?: string
  '24'?: string
}
  borderRadius?: {
  none?: string
  sm?: string
  md?: string
  lg?: string
  xl?: string
  '2xl'?: string
  full?: string
}
}
  shadows?: {
  sm?: string
  md?: string
  lg?: string
  xl?: string
}
  buttons?: {
  primary?: {
  backgroundColor?: string
  textColor?: string
  borderRadius?: string
  padding?: string
}
  secondary?: {
  backgroundColor?: string
  textColor?: string
  borderRadius?: string
  padding?: string
}
}
  previewImage?: Media
  isActive?: boolean
  isDefault?: boolean
  customCss?: string
  tenant: Tenants
}

export interface UpdateBuilderThemes extends Partial<CreateBuilderThemes> {
  id: string
}

// UNION TYPES
// ============

export type AllCollections = BuilderAnimations | BuilderBlockRevisions | BuilderBlocks | BuilderConditionalRules | BuilderDrafts | BuilderDynamicData | Forms | BuilderGlobalStyles | BuilderIntegrations | BuilderLayouts | BuilderPageRevisions | BuilderPages | BuilderPublishQueue | BuilderReusableComponents | BuilderSections | BuilderSeo | BuilderTemplates | BuilderThemes

export type BuilderCollections = BuilderAnimations | BuilderBlockRevisions | BuilderBlocks | BuilderConditionalRules | BuilderDrafts | BuilderDynamicData | Forms | BuilderGlobalStyles | BuilderIntegrations | BuilderLayouts | BuilderPageRevisions | BuilderPages | BuilderPublishQueue | BuilderReusableComponents | BuilderSections | BuilderSeo | BuilderTemplates | BuilderThemes
